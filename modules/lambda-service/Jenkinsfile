pipeline {
    agent any
    stages {
        stage("Checkout"){
            steps {
                checkout scm
            }
        }
        stage("Setup") {
            environment {
                JAVAENV_HOME = "${workspace}/.gradle/javaenv/"
            }
            steps {
                sh './gradlew setup installJava'
            }
        }
        stage("Build") {
            environment {
                JAVAENV_HOME = "${workspace}/.gradle/javaenv/"
            }
            steps {
                sh 'JAVA_HOME=$(./.gradle/javaenv/javaenv home) ./gradlew :modules:lambda-service-model:build :modules:lambda-service:build -Pbuild_number=$BUILD_NUMBER'
            }
        }

        stage("Publish") {
            environment {
                JAVAENV_HOME = "${workspace}/.gradle/javaenv/"
            }
            steps {
                withCredentials(
                        [usernamePassword(credentialsId: 'archiva', usernameVariable: 'ARCHIVA_USERNAME', passwordVariable: 'ARCHIVA_PASSWORD')]) {
                    sh 'JAVA_HOME=$(./.gradle/javaenv/javaenv home) ./gradlew :modules:lambda-service-model:publish :modules:lambda-service:publish -Pbuild_number=$BUILD_NUMBER -PmavenRepositoryUsername=$ARCHIVA_USERNAME -PmavenRepositoryPassword=$ARCHIVA_PASSWORD'
                }
            }
        }
    }

    post {
        always {
            publishHTML (target : [allowMissing: true,
                                   alwaysLinkToLastBuild: false,
                                   keepAll: true,
                                   reportDir: 'modules/lambda-service/build/reports',
                                   includes: '**/*',
                                   reportFiles: 'index.html',
                                   reportName: 'lambda-service-reports',
                                   reportTitles: 'lambda-service-reports'])
            publishHTML (target : [allowMissing: true,
                                   alwaysLinkToLastBuild: false,
                                   keepAll: true,
                                   reportDir: 'modules/lambda-service-model/build/reports',
                                   includes: '**/*',
                                   reportFiles: 'index.html',
                                   reportName: 'lambda-service-model-reports',
                                   reportTitles: 'lambda-service-model-reports'])
        }
    }

}